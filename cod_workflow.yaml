main:
  params: [input]
  steps:
    - init:
        assign:
          - project: 'motors-word'
          - region: 'southamerica-east1'
          - template_1: 'gs://motors-word/templates/template-novadrive-ingest-2024-07-03--21-39'
          - template_2: 'gs://motors-word/templates/template-novadrive-ingest-2024-07-03--21-39'

    - start_job_1_morning:
        call: http.post
        args:
          url: 'https://dataflow.googleapis.com/v1b3/projects/${project}/locations/${region}/templates:launch'
          headers:
            Authorization: 'Bearer ${system.token}'
          body:
            jobName: 'dataflow-job-1-morning'
            parameters: '${parameters_1}'
            environment:
              tempLocation: 'gs://motors-word/temp/'
              zone: 'southamerica-east1-f'
            gcsPath: '${template_1}'
        result: job_1_result

    - check_job_1_morning_status:
        switch:
          - condition: '${job_1_result.job.currentState == "JOB_STATE_DONE"}'
            next: start_job_2_morning
          - condition: '${job_1_result.job.currentState in ["JOB_STATE_FAILED", "JOB_STATE_CANCELLED"]}'
            raise: 'Job 1 (morning) failed or was cancelled'
          - condition: '${true}'
            sleep: 60
            next: check_job_1_morning_status

    - start_job_2_morning:
        call: http.post
        args:
          url: 'https://dataflow.googleapis.com/v1b3/projects/${project}/locations/${region}/templates:launch'
          headers:
            Authorization: 'Bearer ${system.token}'
          body:
            jobName: 'dataflow-job-2-morning'
            parameters: '${parameters_2}'
            environment:
              tempLocation: 'gs://motors-word/temp/'
              zone: 'southamerica-east1-f'
            gcsPath: '${template_2}'
        result: job_2_result

    - check_job_2_morning_status:
        switch:
          - condition: '${job_2_result.job.currentState == "JOB_STATE_DONE"}'
            next: start_job_1_afternoon
          - condition: '${job_2_result.job.currentState in ["JOB_STATE_FAILED", "JOB_STATE_CANCELLED"]}'
            raise: 'Job 2 (morning) failed or was cancelled'
          - condition: '${true}'
            sleep: 60
            next: check_job_2_morning_status

    - start_job_1_afternoon:
        call: http.post
        args:
          url: 'https://dataflow.googleapis.com/v1b3/projects/${project}/locations/${region}/templates:launch'
          headers:
            Authorization: 'Bearer ${system.token}'
          body:
            jobName: 'dataflow-job-1-afternoon'
            parameters: '${parameters_1}'
            environment:
              tempLocation: 'gs://motors-word/temp/'
              zone: 'southamerica-east1-f'
            gcsPath: '${template_1}'
        result: job_1_afternoon_result

    - check_job_1_afternoon_status:
        switch:
          - condition: '${job_1_afternoon_result.job.currentState == "JOB_STATE_DONE"}'
            next: start_job_2_afternoon
          - condition: '${job_1_afternoon_result.job.currentState in ["JOB_STATE_FAILED", "JOB_STATE_CANCELLED"]}'
            raise: 'Job 1 (afternoon) failed or was cancelled'
          - condition: '${true}'
            sleep: 60
            next: check_job_1_afternoon_status

    - start_job_2_afternoon:
        call: http.post
        args:
          url: 'https://dataflow.googleapis.com/v1b3/projects/${project}/locations/${region}/templates:launch'
          headers:
            Authorization: 'Bearer ${system.token}'
          body:
            jobName: 'dataflow-job-2-afternoon'
            parameters: '${parameters_2}'
            environment:
              tempLocation: 'gs://motors-word/temp/'
              zone: 'southamerica-east1-f'
            gcsPath: '${template_2}'
        result: job_2_afternoon_result

    - check_job_2_afternoon_status:
        switch:
          - condition: '${job_2_afternoon_result.job.currentState == "JOB_STATE_DONE"}'
            return: 'Both jobs completed successfully'
          - condition: '${job_2_afternoon_result.job.currentState in ["JOB_STATE_FAILED", "JOB_STATE_CANCELLED"]}'
            raise: 'Job 2 (afternoon) failed or was cancelled'
          - condition: '${true}'
            sleep: 60
            next: check_job_2_afternoon_status
